# This is a comment.
# Important: You *must* indent using <TAB>s, not spaces.
# Set default goal to not be dependent on sorting / ordering.
.DEFAULT_GOAL := help

# If .ONESHELL is mentioned as a target, then when a target is built
# all lines of the recipe will be given to a single invocation of the
# shell rather than each line being invoked separately.
.ONESHELL:

# switch from default /bin/sh to
SHELL := /bin/bash

CMD=$(realpath bin/twine)


.PHONY: help
help:
	@ echo -e "\nThis help is autogenerated by taking the inline-comments (starting with double ##) from the .PHONY-lines"
	@ echo -e "Please use \`make <target>' whmkere <target> is one of:\n"
	@ grep -E '^\.PHONY: [a-zA-Z_-]+ .*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = "(: |##)"}; {printf "\033[36m%-30s\033[0m %s\n", $$2, $$3}'


.PHONY: clean
clean:
	- rm -fr bin include lib lib64 pyvenv.cfg


.PHONY: install  ## run all install-steps
install: create-dirs create-venv upgrade-pip install-packages install-dotenv install-symlinks


.PHONY: update
update: upgrade-pip install-packages


.PHONY: create-dirs  ## create files and directories
create-dirs:
	@ mkdir -p etc
	@ mkdir -p var/cache
	@ mkdir -p var/tmp


.PHONY: create-venv
create-venv:
	- python3 -m venv .


.PHONY: upgrade-pip
install:
	- bin/python -m pip install --upgrade pip


.PHONY: install-packages
install-packages:
	- bin/pip install --upgrade twine
	- bin/pip install --upgrade autoread-dotenv


.PHONY: install-dotenv  ## generate .dotenv from template
install-dotenv:
	@ echo -e "Copying .env.template to .env"
	@ cp -n .env.template .env
	@ echo "Please review the config in .env"
	@ echo -e "Replacing string __CWD__ -> $(PWD)"
	@ $(SED) -i 's@__CWD__@'"$(PWD)"'@' .env


.PHONY: install-symlinks
install-symlinks:
	@ echo -e "Symlink ${CMD} to ${HOME}/bin/"
	@ cd ~/bin && ln -sf ${CMD}
