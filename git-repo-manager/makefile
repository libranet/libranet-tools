# This is a comment.
# Important: You *must* indent using <TAB>s, not spaces.

# Set default goal to not be dependent on sorting / ordering.
.DEFAULT_GOAL := help

# If .ONESHELL is mentioned as a target, then when a target is built
# all lines of the recipe will be given to a single invocation of the
# shell rather than each line being invoked separately.
.ONESHELL:

# switch from default /bin/sh to
SHELL := /bin/bash

SED=`command -v gsed || command -v sed`
CMD=$(realpath bin/black)

.PHONY: help
help:
	@ echo -e "\nThis help is autogenerated by taking the inline-comments (starting with double ##) from the .PHONY-lines"
	@ echo -e "Please use \`make <target>' whmkere <target> is one of:\n"
	@ grep -E '^\.PHONY: [a-zA-Z_-]+ .*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = "(: |##)"}; {printf "\033[36m%-30s\033[0m %s\n", $$2, $$3}'


.PHONY: clean  ## remove generated files & dirs
clean:
	@ rm -fr bin 
	@ rm -fr var


.PHONY: create-dirs  ## create files and directories
create-dirs:
	@ mkdir -p bin
	@ mkdir -p var/cache
	@ mkdir -p var/tmp


.PHONY: install ## run all install-steps
install: create-dirs install-packages install-symlinks check


.PHONY: update  ## update the current installation
update: upgrade-pip install-packages check


.PHONY: install-packages  ## install rust-packages via cargo
install-packages:
	- cargo install git-repo-manager


.PHONY: install-symlinks  ## generate symlinks
install-symlinks:
	@ echo -e "Symlink ${CARGO_HOME}/bin/grm to bin/"
	@ cd ~/bin && ln -sf ${CARGO_HOME}/bin/grm && cd -
	@ cd bin && ln -sf ${CARGO_HOME}/bin/grm && cd -


.PHONY: check
check:
	@ echo -e "\nCurrent version is:"
	@ bin/grm --version
