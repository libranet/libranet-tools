; This is a comment.
;
; The variable %(here)s expands to the directory in which
; this supervisord configuration file is found.
;
; We try to avoid hardcoded absolute paths, instead we use
; relative paths were possible, to make the deployment relocatable.
;
; For documentation, please see
;   - http://supervisord.org/configuration.html
;   - https://github.com/Supervisor/supervisor/blob/master/supervisor/skel/sample.conf
;
; Every environment-variable is available as %(ENV_<name-variable>)s
; So FLASK_ENV is available via %(ENV_FLASK_ENV)s
;
; Assumed directory-structure:
; <project-dir>/etc/
; <project-dir>/etc/supervisor.conf  (this file)
; <project-dir>/etc/supervisor.d/*.conf


[supervisord]
directory = %(here)s/..
logfile = var/log/supervisord.log       ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes = 100MB                ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups = 10                    ; (num of main logfile rotation backups;default 10)
loglevel = info                         ; (log level;default info; others: debug,warn,trace)
pidfile = var/run/supervisord.pid       ; (supervisord pidfile;default supervisord.pid)
childlogdir = var/log
umask = 022
nodaemon = false
nocleanup = false

; The [include] section can just contain the "files" setting.
; This setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.
[include]
files = etc/supervisord.d/*

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.
[supervisorctl]
serverurl = unix://var/run/supervisor.sock

[unix_http_server]
file = var/run/supervisor.sock    ; (the path to the socket file)

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


