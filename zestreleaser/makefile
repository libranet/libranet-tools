# This is a comment.
# Important: You *must* indent using <TAB>s, not spaces.

.NOTPARALLEL:
.ONESHELL:
.PHONY: all

help: #? display this help information
	@ grep "^#?" makefile | cut -c 4-
	@ echo -e "\nThis help is generated by parsing the inline comments."
	@ echo -e "Please use \`make <target>' where <target> is one of:\n"
	@ grep -E '^[a-zA-Z_-]+:.*?#?.*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?#\\? "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean:  #? remove generated files & dirs 
	@ rm -fr bin include lib lib64 pyvenv.cfg
	@ rm -fr var

install: create-dirs create-venv upgrade-pip install-packages install-symlinks version #? run all install-steps

update: upgrade-pip install-packages version  #? update the current installation

create-dirs: #? create files and directories
	@ mkdir -p var/cache
	@ mkdir -p var/log
	@ mkdir -p var/tmp

create-venv: #? create a virtual python-environment
	- python3 -m venv .

upgrade-pip: #? upgrade pip itself
	- bin/python -m pip install --upgrade pip

install-packages: #? install python-packages via pip
	- bin/pip install --upgrade zest.releaser

install-symlinks: #? generate symlinks
	@ echo -e "Create symlinks in ~/bin/"
	@ ln -fs $(realpath bin/release) ~/bin/
	@ ln -fs $(realpath bin/fullrelease) ~/bin/
	@ ln -fs $(realpath bin/prerelease) ~/bin/
	@ ln -fs $(realpath bin/longtest) ~/bin/

version:  #? show current version
	@ echo -e "\nCurrent version is:"
	@ bin/pip freeze | grep zest.releaser
