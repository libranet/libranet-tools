# This is a comment.
# Important: You *must* indent using <TAB>s, not spaces.
MAKEFLAGS += --always-make --warn-undefined-variables
.NOTPARALLEL:
.ONESHELL:

SED=`command -v gsed || command -v sed`

help:  #? display this help information
	@ grep "^#?" makefile | cut -c 4-
	@ echo -e "\nThis help is generated by parsing the inline comments."
	@ echo -e "Please use \`make <target>' where <target> is one of:\n"
	@ grep -E '^[a-zA-Z_-]+:.*?#?.*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?#\\? "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'


# See https://stackoverflow.com/questions/19456518/error-when-using-sed-with-find-command-on-os-x-invalid-command-code
# By default MacOS does not use GNU Sed, but a different less-compatible sed-implemenation that
# easily triggers following error: 'invalid command code'.
# You need to install GNU Sed via 'brew install gnu-sed' to make the 'gsed'-command available on $PATH.
# In our makesfiles, use gsed if found, otherwise regular sed.
SED=`command -v gsed || command -v sed`

PYENV_ROOT=$(realpath -m var/repo)
TMPDIR=$(realpath var/tmp)
CMD=$(realpath ${PYENV_ROOT}/libexec/pyenv)


clean: #? remove generated files & dirs
	@ rm -fr bin
	@ rm -fr var

create-dirs: #? create files and directories
	@ mkdir -p bin
	@ mkdir -p etc
	@ mkdir -p var
	@ mkdir -p var/tmp

install: install-rpm-packages create-dirs install-pyenv update-pyenv install-plugins install-local-symlinks install-symlinks bashrc-install-from-example bashrc-set-dir  #? run all install-steps

install-rpm-packages: #? install rpm-packages
	# - for i in $(cat etc/rpm.txt);do sudo dnf install $i -y; done
	# - for i in $$(grep -vE '^\s*(#|$)' etc/rpm.txt); do sudo dnf install "$$i" -y; done
	# - ../bin/install-rpm.sh etc/rpm.txt

install-pyenv:  #? run pyenv-install-script
	# curl https://pyenv.run | bash
	curl -s -S -L -f https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash

update-pyenv: #? update pyenv itself
	${CMD} update

update: update-pyenv

install-symlinks: create-dirs  #? cretae symlinks
	@ mkdir -p ${HOME}/bin
	@ echo -e "Symlink ${CMD} to ${HOME}/bin/"
	@ cd ~/bin && ln -sf ${CMD}
	@ echo -e "Symlink ${CMD} to bin/"
	@ cd bin && ln -sf ${CMD}

install-plugins:  #? install extra pyenv-plugins
	# see https://github.com/pyenv/pyenv-ccache
	git clone https://github.com/pyenv/pyenv-ccache.git $(PYENV_ROOT)/plugins/pyenv-ccache
	# see https://github.com/pyenv/pyenv-users
	git clone https://github.com/pyenv/pyenv-users.git "$(PYENV_ROOT)/plugins/pyenv-users"

# cp --backup  creates .env~, but will overwrite this next time.
# safest way, is to not overwrite existing .bashrc-files, manual intervention needed.
bashrc-install-from-example:  #? instantiate the bashrc-file (no override)
	@ echo -e "Copying etc/bashrc.example to etc/bashrc"
	@ cp -n  etc/bashrc.example  etc/bashrc
	@ echo -e "Please review the etc/bashrc-file."

bashrc-set-dir: bashrc-install-from-example #? replace placeholder __PYENV_ROOT__ with current working directory
	@echo -e "Replacing string __PYENV_ROOT__ -> $(PYENV_ROOT ${PYENV_ROOT})"
	$(SED) -i 's@__PYENV_ROOT__@'"$(realpath ${PYENV_ROOT})"'@'  etc/bashrc

pyenv-available-versions:  #? list available python-versions
	bin/pyenv install --list

pyenv-installed-versions:  #? list installed python-versions
	bin/pyenv versions

pyenv-install-python-3-10-7:  #? install python 3.10.10
	bin/pyenv install -v 3.10.10

pyenv-install-python-3-11-5:  #? install python 3.11.5
	bin/pyenv install -v 3.11.5

pyenv-install-python-3-11-6:6  #? install python 3.11.6
	bin/pyenv install -v 3.11.6

pyenv-install-python-latest-38: #? install python 3.8.x
	PYTHON_VERSION=$(bin/pyenv install --list | egrep '^[[:space:]]*3\.8' | tail -n 1)
	bin/pyenv install -v ${PYTHON_VERSION}

pyenv-install-python-latest-39: #? install python 3.9.x
	bin/pyenv install -v $(pyenv install --list | egrep '^[[:space:]]*3\.9' | tail -n 1)

pyenv-install-python-latest-310: #? Install the latest Python 3.10.x
	PYTHON_VERSION=$$(bin/pyenv install --list | grep -E '^[[:space:]]*3\.10' | tail -n 1); \
	bin/pyenv install -v $${PYTHON_VERSION}

#pyenv-install-python-latest-310:
#	PYTHON_VERSION=$(bin/pyenv install --list | egrep '^[[:space:]]*3\.10' | tail -n 1)
#	bin/pyenv install -v ${PYTHON_VERSION}

pyenv-install-python-latest-311:  #? install python 3.11.x
	PYTHON_VERSION=$(bin/pyenv install --list | egrep '^[[:space:]]*3\.11' | tail -n 1) && bin/pyenv install -v ${PYTHON_VERSION}
